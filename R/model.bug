model {
  ## scale for the priors
  sdp <- 100
  sds <- sdp*sdp
  for (i in 1:n.rows) {
    y[i]~dbern(p[i])
    d[i] <- abs(x[party.i[i],state.i[i]]-x[party.j[i],state.i[i]])
    xb1[i] <- -d[i]+g[group[i]]+b[1]+b[2]*th.i[i]+
      b[3]*log.magnitude[i]+b[4]*party.gov.j[i]+b[5]*benefit.i[i]+b[6]*log.votes.i[i]
    xb2[i] <- -d[i]+g[group[i]]+b[1]+b[2]*th.j[i]+
      b[3]*log.magnitude[i]+b[4]*party.gov.i[i]+b[5]*benefit.j[i]+b[6]*log.votes.j[i]
    p[i] <- phi(xb1[i])*phi(xb2[i])
  }
  ## proportion correct
  c1 <- (sum((p>.5)*y)+sum((p<.5)*(1-y)))/n.rows
  ##  priors
  sigma.x ~ dunif(0,sdp)
  tau.x <- pow(sigma.x,-2)
  for (i in 1:6) {
    b[i] ~ dnorm(0,pow(sdp,-2))
  }
  ## spike priors for parties 1 and 2
  mu.x[1] ~ dnorm(-1,sds)
  mu.x[2] ~ dnorm(1,sds)
  ## weakly informative for remaining parties
  for (i in 3:n.parties) {
    mu.x[i] ~ dnorm(0,pow(sdp,-2))
  }
  ## normal priors for parties 3:n.parties
  for (i in 3:n.parties) {
    for (j in 1:n.states) {
      x[i,j] ~ dnorm(mu.x[i],tau.x)
    }
  }
  ## truncated priors (so 1 is negative and 2 is positive) for parties 1 and 2
  for (j in 1:n.states) {
    x[1,j] ~ dnorm(mu.x[1],tau.x)T(,0)
    x[2,j] ~ dnorm(mu.x[2],tau.x)T(0,)
  }
  for (i in 1:n.groups) {
    g[i] ~ dnorm(0,tau.g)
  }
  sigma.g ~ dunif(0,sdp)
  tau.g <- pow(sigma.g,-2)
}
